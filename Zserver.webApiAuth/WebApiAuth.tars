module Zserver
{
    struct LoginLog {
        0 optional int       infoId; //主键
        1 optional string    username;       //用户名
        2 optional string    status;               //状态
        3 optional string    ipaddr;         //ip地址
        4 optional string    loginLocation;  //归属地
        5 optional string    browser;        //浏览器
        6 optional string    os;             //系统
        7 optional string    platform;       // 固件
        8 optional string    loginTime;         //登录时间
        9 optional string    createBy;       //创建人
        10 optional string    updateBy;       //更新者
        11 optional string    dataScope;                       //数据
        12 optional string    params;                          //
        13 optional string    remark;         //备注
        14 optional string    msg;
        15 optional string createdAt;
        16 optional string updatedAt;
        17 optional string deletedAt;
    };
    struct LoginLog_List {
         0 optional vector<LoginLog> loginLogList;
         1 optional int  count;
    };

    struct SysConfig {
    	0 optional     int    configId; //编码
    	1 optional   string configName;        //参数名称
    	2 optional    string configKey;         //参数键名
    	3 optional  string configValue;       //参数键值
    	4 optional   string configType;         //是否系统内置
    	5 optional       string remark;            //备注
    	6 optional     string createBy;
    	7 optional     string updateBy;
    	8 optional    string dataScope;
    	9 optional       string params;
        10 optional string createdAt;
        11 optional string updatedAt;
        12 optional string deletedAt;
    };

    struct SysConfig_List {
         0 optional vector<SysConfig> sysConfigList;
         1 optional int  count;
    };

    struct SysUser {
    	UserId int `gorm:"primary_key;AUTO_INCREMENT"  json:"userId"` // 编码
      NickName  string `gorm:"type:varchar(128)" json:"nickName"` // 昵称
      Phone     string `gorm:"type:varchar(11)" json:"phone"`     // 手机号
      RoleId    int    `gorm:"type:int(11)" json:"roleId"`        // 角色编码
      Salt      string `gorm:"type:varchar(255)" json:"salt"`     //盐
      Avatar    string `gorm:"type:varchar(255)" json:"avatar"`   //头像
      Sex       string `gorm:"type:varchar(255)" json:"sex"`      //性别
      Email     string `gorm:"type:varchar(128)" json:"email"`    //邮箱
      DeptId    int    `gorm:"type:int(11)" json:"deptId"`        //部门编码
      PostId    int    `gorm:"type:int(11)" json:"postId"`        //职位编码
      CreateBy  string `gorm:"type:varchar(128)" json:"createBy"` //
      UpdateBy  string `gorm:"type:varchar(128)" json:"updateBy"` //
      Remark    string `gorm:"type:varchar(255)" json:"remark"`   //备注
      Status    string `gorm:"type:int(1);" json:"status"`
      DataScope string `gorm:"-" json:"dataScope"`
      Params    string `gorm:"-" json:"params"`
      Username string `gorm:"type:varchar(64)" json:"username"`
      Password string `gorm:"type:varchar(128)" json:"password"`

      CreatedAt time.Time  `json:"createdAt"`
      UpdatedAt time.Time  `json:"updatedAt"`
      DeletedAt *time.Time `sql:"index" json:"deletedAt"`
    }


	interface WebApiAuth
	{
	    void SysConfig_Create(SysConfig req,out SysConfig res);
	    void SysConfig_Get(SysConfig req,out SysConfig res);
	    void SysConfig_GetPage(int pageSize,int pageIndex,SysConfig req,out SysConfig_List res);
	    void SysConfig_Update(int id,SysConfig req,out SysConfig res);
	    void SysConfig_Delete(SysConfig req,out SysConfig res);
	    void SysConfig_BatchDelete(vector<int> id,SysConfig req,out bool res);

	    void LoginLog_Get(LoginLog req,out LoginLog res);
	    void LoginLog_GetPage(int pageSize,int pageIndex,LoginLog req,out LoginLog_List res);
	    void LoginLog_Create(LoginLog req,out LoginLog res);
	    void LoginLog_Update(int id,LoginLog req,out LoginLog res);
	    void LoginLog_BatchDelete(vector<int> id,LoginLog req,out bool res);
	};
};
